version: '3.1'

services:
  frontend:
    container_name: Stock_Project_frontend
    build: ./frontend
    ports:
      - 3000:3000
    working_dir: /frontend
    volumes: 
      - ./frontend:/frontend
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    container_name: Stock_Project_backend
    build: ./backend
    restart: always
    ports:
      - 3009:3009
    working_dir: /backend
    volumes:
      - ./backend:/backend
    command: dev
    env_file:
      - .env
    # environment:
    #   - MONGO_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3009"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  postgres:
    container_name: Stock_Project_database
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
