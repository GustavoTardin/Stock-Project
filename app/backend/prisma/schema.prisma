generator client {
  provider = "prisma-client-js"
   binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int        @id @default(autoincrement())
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId Int        @unique
  size         Size       @relation(fields: [sizeId], references: [id])
  sizeId       Int        @unique
  designId     Int        @unique
  price        Decimal
  cost         Decimal
  createdAt    DateTime   @default(now())
  updateAt     DateTime   @updatedAt
  Stock        Stock?

  @@map("products")
}

model ProductCategory {
  id           Int    @id @default(autoincrement())
  categoryName String @unique

  @@map("product_categories")
}

model ProductModel {
  id          Int         @id @default(autoincrement())
  categoryId  Int
  modelName   String
  description String
  collections Collection?

  @@map("product_models")
}

model Stock {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
  quantity  Int
  allertLow Int

  @@map("stocks")
}

model Collection {
  id        Int          @id @default(autoincrement())
  model     ProductModel @relation(fields: [modelId], references: [id])
  modelId   Int          @unique
  gender    Gender       @relation(fields: [genderId], references: [id])
  genderId  Int
  apparelId Int
  apparel   Apparel      @relation(fields: [apparelId], references: [id])
  Product   Product?

  @@map("collections")
}

model Gender {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  Collections Collection[]

  @@map("genders")
}

model Apparel {
  id         Int          @id @default(autoincrement())
  type       String       @unique
  Collection Collection[]

  @@map("apparels")
}

model Size {
  id      Int      @id @default(autoincrement())
  size    String   @unique
  Product Product?

  @@map("sizes")
}

model Design {
  id     Int    @id @default(autoincrement())
  design String @unique

  @@map("designs")
}

model Credential {
  id             Int    @id @default(autoincrement())
  credentialName Role   @unique
  users          User[]

  @@map("credentials")
}

model User {
  id           Int        @id @default(autoincrement())
  firstName    String
  lastName     String?
  nickName     String     @unique
  password     String
  credential   Credential @relation(fields: [credentialId], references: [id])
  credentialId Int        @default(3)

  @@map("users")
}

enum Role {
  Admin
  Root
  Lojista
  Estoquista
}
