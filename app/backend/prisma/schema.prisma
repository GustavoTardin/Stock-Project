generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Credential {
  id             Int    @id @default(autoincrement())
  credentialName Role   @unique
  users          User[]

  @@map("credentials")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String?
  nickName     String         @unique
  password     String
  credentialId Int            @default(3)
  stores       StoreSellers[]
  credential   Credential     @relation(fields: [credentialId], references: [id])

  @@map("users")
}

model Store {
  id            Int            @id @default(autoincrement())
  storeName     String
  contactNumber String         @unique
  storeAddress  StoreAdress?
  sellers         StoreSellers[]

  @@map("stores")
}

model StoreAdress {
  id            Int    @id @default(autoincrement())
  storeId       Int    @unique
  state         String
  city          String
  street        String
  addressNumber Int
  store         Store  @relation(fields: [storeId], references: [id])
}

model StoreSellers {
  userId  Int
  storeId Int
  store   Store @relation(fields: [storeId], references: [id])
  user    User  @relation(fields: [userId], references: [id])

  @@id([userId, storeId])
}

model Product {
  id           Int        @id @default(autoincrement())
  collectionId Int        @unique
  sizeId       Int        @unique
  designId     Int        @unique
  price        Decimal
  cost         Decimal
  createdAt    DateTime   @default(now())
  updateAt     DateTime   @updatedAt
  collection   Collection @relation(fields: [collectionId], references: [id])
  size         Size       @relation(fields: [sizeId], references: [id])
  Stock        Stock?

  @@map("products")
}

model ProductCategory {
  id           Int    @id @default(autoincrement())
  categoryName String @unique

  @@map("product_categories")
}

model ProductModel {
  id          Int         @id @default(autoincrement())
  categoryId  Int
  modelName   String
  description String
  collections Collection?

  @@map("product_models")
}

model Stock {
  id        Int     @id @default(autoincrement())
  productId Int     @unique
  quantity  Int
  allertLow Int
  product   Product @relation(fields: [productId], references: [id])

  @@map("stocks")
}

model Collection {
  id        Int          @id @default(autoincrement())
  modelId   Int          @unique
  genderId  Int
  apparelId Int
  apparel   Apparel      @relation(fields: [apparelId], references: [id])
  gender    Gender       @relation(fields: [genderId], references: [id])
  model     ProductModel @relation(fields: [modelId], references: [id])
  Product   Product?

  @@map("collections")
}

model Gender {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  Collections Collection[]

  @@map("genders")
}

model Apparel {
  id         Int          @id @default(autoincrement())
  type       String       @unique
  Collection Collection[]

  @@map("apparels")
}

model Size {
  id      Int      @id @default(autoincrement())
  size    String   @unique
  Product Product?

  @@map("sizes")
}

model Design {
  id     Int    @id @default(autoincrement())
  design String @unique

  @@map("designs")
}

enum Role {
  Admin
  Root
  Lojista
  Estoquista
}
